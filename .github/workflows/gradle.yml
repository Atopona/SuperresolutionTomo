name: Build

on:
  push:
    branches: [ '*' ]

jobs:
  build:
    if: ${{ !contains(github.event.head_commit.message, 'SKIP') }}
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Validate Gradle wrapper
        uses: gradle/actions/wrapper-validation@v4
      - name: Setup JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: temurin
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Setup Vulkan SDK
        uses: humbletim/setup-vulkan-sdk@v1
        with:
          vulkan-version: latest

      - name: Download NGX SDK (optional)
        if: ${{ env.NGX_SDK_URL != '' }}
        shell: bash
        run: |
          set -e
          curl -L "$NGX_SDK_URL" -o ngx_sdk.zip
          mkdir -p ngx_sdk
          bsdtar -xf ngx_sdk.zip -C ngx_sdk
          echo "NGX_SDK_DIR=$(pwd)/ngx_sdk" >> $GITHUB_ENV

      - name: Build native JNI (CMake, NGX optional)
        shell: cmd
        run: |
          cd native
          if not exist build mkdir build
          cd build
          if defined NGX_SDK_DIR (
            cmake -A x64 -DUSE_NGX_SDK=ON -DNGX_SDK_DIR=%NGX_SDK_DIR% ..
          ) else (
            cmake -A x64 -DUSE_NGX_SDK=OFF ..
          )
          cmake --build . --config Release

      - name: Copy native into mod resources
        run: python script/copy_native.py

      - name: Build
        id: build
        if: ${{ !cancelled() }}
        run: python script/buildAll.py
      - name: Capture build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: superresolution-build
          path: |
            build_jars/